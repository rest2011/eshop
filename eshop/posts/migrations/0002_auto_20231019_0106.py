# Generated by Django 3.2.15 on 2023-10-18 20:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('posts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Без бренда', help_text='Бренд', max_length=100, verbose_name='Бренд')),
                ('slug', models.CharField(help_text='Название идентификатора', max_length=255, unique=True, verbose_name='Идентификатор')),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(help_text='Имя автора', on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('user', models.ForeignKey(help_text='Имя подписчика', on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название категории', max_length=200, verbose_name='Категория')),
                ('slug', models.SlugField(help_text='Название идентификатора', unique=True, verbose_name='Идентификатор')),
                ('description', models.TextField(help_text='Текст описания', verbose_name='Описание')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='posts.group')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Szu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название товара', max_length=255, verbose_name='Товар')),
                ('slug', models.CharField(help_text='Название идентификатора', max_length=255, unique=True, verbose_name='Идентификатор')),
                ('text', models.TextField(help_text='Описание товара', verbose_name='Описание товара')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('image', models.ImageField(blank=True, help_text='Поле для загрузки картинки', upload_to='posts/', verbose_name='Картинка')),
                ('price', models.DecimalField(decimal_places=2, help_text='Поле для цены', max_digits=10, verbose_name='Цена')),
                ('color', models.CharField(choices=[('red', 'красный'), ('blue', 'синий'), ('green', 'зеленый'), ('white', 'белый'), ('black', 'черный')], default='нет', help_text='Цвет', max_length=100, verbose_name='Цвет')),
                ('amper', models.DecimalField(choices=[(0.5, 0.5), (1, 1), (2, 2), (2.1, 2.1), (3, 3)], decimal_places=2, max_digits=10)),
                ('charger_type', models.CharField(choices=[('micro_usb', 'Micro USB'), ('usb_c', 'USB-C'), ('lightning', 'Lightning'), ('mini_usb', 'Mini USB'), ('d880', 'D880'), ('6101', 'Nokia 6101')], max_length=10)),
                ('author', models.ForeignKey(help_text='Имя автора', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('brand', models.ForeignKey(help_text='Бренд', max_length=100, on_delete=django.db.models.deletion.PROTECT, to='posts.brand', verbose_name='Бренд')),
                ('group', models.ForeignKey(blank=True, help_text='Категория, к которой будет относиться товар', null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.group', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SzuUsb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название товара', max_length=255, verbose_name='Товар')),
                ('slug', models.CharField(help_text='Название идентификатора', max_length=255, unique=True, verbose_name='Идентификатор')),
                ('text', models.TextField(help_text='Описание товара', verbose_name='Описание товара')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('image', models.ImageField(blank=True, help_text='Поле для загрузки картинки', upload_to='posts/', verbose_name='Картинка')),
                ('price', models.DecimalField(decimal_places=2, help_text='Поле для цены', max_digits=10, verbose_name='Цена')),
                ('color', models.CharField(choices=[('red', 'красный'), ('blue', 'синий'), ('green', 'зеленый'), ('white', 'белый'), ('black', 'черный')], default='нет', help_text='Цвет', max_length=100, verbose_name='Цвет')),
                ('amper', models.DecimalField(choices=[(0.5, 0.5), (1, 1), (2, 2), (2.1, 2.1), (3, 3)], decimal_places=2, max_digits=10)),
                ('usb_outputs', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('author', models.ForeignKey(help_text='Имя автора', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('brand', models.ForeignKey(help_text='Бренд', max_length=100, on_delete=django.db.models.deletion.PROTECT, to='posts.brand', verbose_name='Бренд')),
                ('group', models.ForeignKey(blank=True, help_text='Категория, к которой будет относиться товар', null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.group', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='Post',
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='unique_followers'),
        ),
    ]
